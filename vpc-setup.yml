- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC Variables
      include_vars: vars/vpc_setup

    - name: Create dev VPC
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}" 
        dns_support: yes
        dns_hostnames: yes 
        tenancy: default 
        state: "{{state}}"
      register: vpcout 

    #- debug:
        #var: vpcout

    - name: Create Public Subnet 1 in Zone1 
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}" 
        region: "{{region}}" 
        az: "{{zone1}}" 
        state: "{{state}}"
        cidr: "{{PubSub1Cidr}}" 
        map_public: yes
        tags: 
          Name: dev-pubsub1 
      register: pubsub1_out

    - name: Create Public Subnet 2 in Zone2 
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}" 
        region: "{{region}}" 
        az: "{{zone2}}" 
        state: "{{state}}"
        cidr: "{{PubSub2Cidr}}" 
        map_public: yes
        tags: 
          Name: dev-pubsub2 
      register: pubsub2_out

    - name: Create Public Subnet 3 in Zone3 
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}" 
        region: "{{region}}" 
        az: "{{zone3}}" 
        state: "{{state}}"
        cidr: "{{PubSub3Cidr}}" 
        map_public: yes
        tags: 
          Name: dev-pubsub3 
      register: pubsub3_out

    - name: Create Private Subnet 1 in Zone1 
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}" 
        region: "{{region}}" 
        az: "{{zone1}}" 
        state: "{{state}}"
        cidr: "{{PrivSub1Cidr}}" 
        map_public: yes
        tags: 
          Name: dev-privsub1 
      register: privsub1_out

    - name: Create Private Subnet 2 in Zone2 
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}" 
        region: "{{region}}" 
        az: "{{zone2}}" 
        state: "{{state}}"
        cidr: "{{PrivSub2Cidr}}" 
        map_public: yes
        tags: 
          Name: dev-privsub2 
      register: privsub2_out

    - name: Create Private Subnet 3 in Zone3 
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}" 
        region: "{{region}}" 
        az: "{{zone3}}" 
        state: "{{state}}"
        cidr: "{{PrivSub3Cidr}}" 
        map_public: yes
        tags: 
          Name: dev-privsub3 
      register: privsub3_out

    - name: Internet Gateway vars/vpc_setup 
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}" 
        region: "{{region}}" 
        state: "{{state}}" 
        tags: 
          Name: dev_IGW
      register: igw_out 

    - name: Set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}" 
        region: "{{region}}" 
        tags: 
          Name: dev-PubRT 
        subnets: 
          - "{{pubsub1_out.subnet.id}}"
          - "{{pubsub1_out.subnet.id}}"
          - "{{pubsub1_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0 
            gateway_id: "{{igw_out.gateway_id}}"
      register: pubRT_out
    
    - name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{pubsub1_out.subnet.id}}"
        wait: yes
        region: "{{region}}"
        if_exist_do_not_create: true
      register: NATGW_out

    - name: Set up private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: Internal
        subnets:
          - "{{ privsub1_out.subnet.id }}"
          - "{{ privsub2_out.subnet.id }}"
          - "{{ privsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ NATGW_out.gateway_id }}" 
      register: PrivTR_out
